{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,6DAA6D;AAC7D;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;ACjH8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAW;AACf;AACA,2BAA2B,iCAAiC;AAC5D;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,uCAAuC,iCAAiC;AACxE;AACA,oBAAoB;AACpB,YAAY;AACZ;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC7D0B;AACA;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,KAAK,MAAM,OAAO;AACpD,yDAAyD,MAAM;AAC/D,uDAAuD,MAAM;AAC7D;AACA;AACA;AACA,iEAAiE,MAAM;AACvE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,iEAAiE;AACjE,+CAA+C;AAC/C,yDAAyD;AACzD;AACA;AACA;AACA,0CAA0C;AAC1C,mEAAmE;AACnE;AACA,iDAAiD;AACjD;AACA,mFAAmF;AACnF;AACA,YAAY,4DAAQ;AACpB;AACA;AACA,kDAAkD;AAClD,kDAAkD;AAClD,aAAa;AACb;AACA,kDAAkD;AAClD,aAAa;AACb;AACA,kDAAkD;AAClD,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,0EAA0E;AAC1E;AACA,qEAAqE;AACrE,QAAQ,iDAAS;AACjB;AACA,mEAAmE;AACnE,mEAAmE;AACnE;AACA;AACA,8DAA8D;AAC9D,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACtGpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA,qFAAqF;AACrF,KAAK;AACL;AACA,4DAA4D;AAC5D;AACA,yDAAyD;AACzD;AACA;AACA;AACA,KAAK;AACL;AACA,4DAA4D;AAC5D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACD;;;;;;;;;;;;;;;ACvDpB,iBAAiB,qFAAqF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,MAAM;AACN;AACA;AACA;AACA,yDAAyD;AACzD,yDAAyD;AACzD,yDAAyD;AACzD;AACA,yDAAyD;AACzD;AACA,yDAAyD;AACzD;AACA,KAAK;AACL;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB,2BAA2B;AAClE,kEAAkE;AAClE,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA,iEAAiE;AACjE,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO,4BAA4B;AACxF;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kEAAkE;AAClE,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO,kBAAkB;AAC9E;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uEAAuE;AACvE;AACA,uEAAuE;AACvE,2DAA2D;AAC3D;AACA,yDAAyD,OAAO,OAAO;AACvE;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,sCAAsC,WAAW,YAAY;AAC7D,UAAU;AACV;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACpJrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;AC3CnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,IAAI;AAC1B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;ACjEpB;AACA,kDAAkD;AAClD,kDAAkD;AAClD;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,4CAA4C,IAAI,YAAY,WAAW,MAAM;AAC7E;AACA,iDAAiD;AACjD;AACA;AACA,CAAmB;AACnB;;;;;;UCxBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNkC;AACA;AACE;AACA;AACA;AACE;AACF;AACI;AACxC;AACA;AACA;AACA,0CAA0C,0DAAS;AACnD;AACA,IAAI,yDAAI;AACR,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,0DAAK;AACT,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n    // Calculator\r\n\r\n    const result = document.querySelector('.calculating__result span');\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', sex);\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', ratio);\r\n    }\r\n\r\n    function initLocalSettings (selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '____';                     // 4 псевдо пробела (то есть это значение не рассчитывается)\r\n            return;                                          // используется для того чтобы досрочно прервать исполнение функции\r\n        }\r\n\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', ratio);\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', sex);\r\n                }\r\n    \r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n    \r\n                e.target.classList.add(activeClass);\r\n    \r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');    \r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n    \r\n    function getDynamicInformantion(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch(input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;        \r\n            }\r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDynamicInformantion('#height');\r\n    getDynamicInformantion('#weight');\r\n    getDynamicInformantion('#age');\r\n}\r\n\r\nexport default calc;","import {getResource} from '../services/services';\r\n\r\nfunction cards() {\r\n    // Получение карточек меню с сервера\r\n\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes){\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 27;\r\n            this.changeToUAH();\r\n        }\r\n\r\n        changeToUAH() {\r\n            this.price *= this.transfer;\r\n        }\r\n\r\n        render() {\r\n            const element =  document.createElement('div');\r\n            if (this.classes.length === 0) {\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);    \r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            element.innerHTML = `\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день\r\n                    </div>\r\n                </div>                \r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    getResource('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.forEach(({img, altimg, title, descr, price}) => {\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        }); \r\n\r\n    // axios.get('http://localhost:3000/menu') //не смотря на подчеркивание все должно работать, потому что эта переменная идет из другого скриптового файла\r\n        // .then(data => {\r\n                // data.data.forEach(({img, altimg, title, descr, price}) => {\r\n                    // new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n                // });\r\n        // });\r\n}\r\n\r\nexport default cards;","import {closeModal, openModal} from './modal';\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms(formSelector, modalTimerID) {\r\n    // Forms Способ получения данных из сервера и вставки на страницу (если это нужно толко однажды и не будет изменяться в дальнейшем)\r\n    // getResource('http://localhost:3000/menu')\r\n    //     .then(data => createCard(data));\r\n\r\n    //     function createCard(data) {\r\n    //         data.forEach(({img, altimg, title, descr, price}) => {\r\n    //             const element = document.createElement('div');\r\n    //             const transfer = 27;\r\n    //             price *= transfer;\r\n    //             element.classList.add('menu__item');\r\n\r\n    //             element.innerHTML = `\r\n    //                 <img src=${img} alt=${altimg}>\r\n    //                 <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n    //                 <div class=\"menu__item-descr\">${descr}</div>\r\n    //                 <div class=\"menu__item-divider\"></div>\r\n    //                 <div class=\"menu__item-price\">\r\n    //                     <div class=\"menu__item-cost\">Цена:</div>\r\n    //                     <div class=\"menu__item-total\"><span>${price}</span> грн/день\r\n    //                     </div>\r\n    //                 </div>    \r\n    //             `;\r\n    //             document.querySelector('.menu .container').append(element);\r\n    //         });\r\n    //     } \r\n\r\n    //Forms\r\n\r\n    const forms = document.querySelectorAll(formSelector);\r\n\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',//, //что бы использовать картинки надо просто указать к ним путь, если сообщение, то прописать его\r\n        success: 'Спасибо! Мы скоро свяжемся с вами',\r\n        failure: 'Что-то пошло не так...',\r\n    };\r\n\r\n    // подвязываем под каждую форму функцию bindPostData\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    });\r\n\r\n    // функция, кот обрабатывает полученные от сервера данные (т.е. отвечает за привязку постинга данных)\r\n    function bindPostData(form){\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault(); // отменяем станд поведение браузера (перезагрузку страницы)\r\n\r\n            const statusMessage = document.createElement('img'); // Создаем нов эл, для сообщения пользователю (напр div или img)\r\n            statusMessage.src=message.loading; // добавляем класс или атрибут src (можно напрямую или через setAttribute('src'))\r\n            statusMessage.textContent = message.loading; // Передаем сообщение, если у нас текстовое сообщение (см объект message) \r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;                            // Добавляем стили (если у нас картинка) Можно их перенести в CSS и просто добавлять класс\r\n            form.insertAdjacentElement('afterend', statusMessage); // добавляем на страницу в конец нашей формы\r\n\r\n            const formData = new FormData(form); // самый простой способ отправки данных с помощью объекта FormData\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));   // сначала из formData получаем массив массивов, затем объект, затем его в формат json \r\n\r\n            postData('http://localhost:3000/requests', json)  // модифицируем данные из объекта в JSON формат\r\n            .then(data => {\r\n                console.log(data);\r\n                showThanksModal(message.success); // сообщение об успешном запросе в нов модальном окне\r\n                statusMessage.remove();           // удаление спинера с результатом загрузки\r\n            })\r\n            .catch(() => {\r\n                showThanksModal(message.failure); // сообщение об ошибке в новом модальном окне (в состояние reject не переходят ошибки http 404 или 500...)\r\n            })\r\n            .finally(() => {\r\n                form.reset();                     // очистка формы\r\n            });\r\n        });\r\n    }\r\n \r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog'); // получаем предыдущий диалог из уже имеющегося мод окна\r\n\r\n        prevModalDialog.classList.add('hide');                       // скрываем его\r\n        openModal('.modal', modalTimerID);\r\n\r\n        const thanksModal = document.createElement('div');         // создаем нов элемент взамен скрытого\r\n        thanksModal.classList.add('modal__dialog');                // присваиваем ему тот же класс, что был у скрытого элемента\r\n        thanksModal.innerHTML = `\r\n            <div class='modal__content'>\r\n                <div class='modal__close' data-close> &times; </div>\r\n                <div class='modal__title'>${message}</div>\r\n            </div>\r\n        `;\r\n        document.querySelector('.modal').append(thanksModal);\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal('.modal');\r\n        }, 4000);\r\n    }\r\n}\r\n\r\nexport default forms;","function closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    document.body.style.overflow = '';\r\n}\r\n\r\nfunction openModal(modalSelector, modalTimerID) {\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden';\r\n\r\n    if (modalTimerID) {\r\n        clearInterval(modalTimerID);\r\n    }\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerID) {\r\n    \r\n    const  modalTriggger = document.querySelectorAll(triggerSelector),\r\n           modal = document.querySelector(modalSelector);\r\n        //    modalCloseBtn = document.querySelector('[data-close]'); // Не нужен крестик, потому что есть динамически созданный элемент       \r\n    \r\n    modalTriggger.forEach(btn => {\r\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerID)); // колбэк ф-ия так прописывается, если у ф-ции есть аргументы\r\n    });\r\n    \r\n    // modalCloseBtn.addEventListener('click', closeModal); //Закрытие окна крестиком, убираем т.к. это не работает при динамическом добавлении другого мод окна\r\n\r\n    modal.addEventListener('click', (e) => {             // Закрытие она кликом на пустую область + кликом на крестик \r\n         if (e.target === modal || e.target.getAttribute('data-close') === '' ) {\r\n            closeModal(modalSelector);\r\n         }\r\n    });\r\n\r\n    document.addEventListener('keydown', (e) => {           // Закрытие окна нажатием на ESCAPE\r\n          if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n            closeModal(modalSelector);\r\n          }\r\n    });\r\n\r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openModal(modalSelector, modalTimerID);\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nexport default modal;\r\nexport {closeModal};\r\nexport {openModal};","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n    // Slider\r\n\r\n    const slides = document.querySelectorAll(slide),  // массив из картинок\r\n          slider = document.querySelector(container),    // весь элемент слайдера\r\n          prev = document.querySelector(prevArrow), // стрелка влево\r\n          next = document.querySelector(nextArrow), // стрелка вправо\r\n          total = document.querySelector(totalCounter),\r\n          current = document.querySelector(currentCounter),\r\n          slidesWrapper = document.querySelector(wrapper), // внешняя обертка слайдов\r\n          slidesField = document.querySelector(field),     // внутренняя обертка слайдов\r\n          width = window.getComputedStyle(slidesWrapper).width;  // получаем стили примененные компьютером в виде строки, напр '500px'\r\n\r\n    let slideIndex = 1;\r\n    let offset = 0;           // сдвиг\r\n    \r\n    setCurrent();\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%'; // устанавливаем ширину блоку со слайдами в процентах\r\n    slidesField.style.display = 'flex';                  // делаем из этого блока флекс контейнер\r\n    slidesField.style.transition = '0.5s all';           // делаем CSS - переход, длительностью 0,5сек\r\n\r\n    slidesWrapper.style.overflow = 'hidden';             // скрываем лишние слайды, т.е. все что выходит за пределы внешнего блока\r\n\r\n    slides.forEach(slide => {                            // устанавливаем ширину для каждого слайда по ширине внешнего блока (на случай если у них разная ширина)\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slider.style.position = 'relative';                  // для того, чтобы относительно этого блока расположить точки\r\n\r\n    const indicators = document.createElement('ol'),\r\n          dots = [];\r\n\r\n    indicators.classList.add('carousel-indicators');     // если добавляем класс, то стили прописываем в style.css/ если не добавляем, то можно в js\r\n    indicators.style.cssText = `                        \r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) {                     // с помощью цикла создаем точки навигации в количестве равном кол-ву слайдов\r\n        const dot = document.createElement('li');                 // и прописываем для них стили\r\n        dot.setAttribute('data-slide-to', i + 1);                 // устанавливаем нумерацию точек начиная с 1\r\n        dot.style.cssText = `           \r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;\r\n        if (i == 0) {                                             // устанавливаем полную непрозрачность для первой точки\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);                                  // помещаем точку в список ol\r\n        dots.push(dot);                                          // и помещаем точку в массив, который можно в дальнейшем использовать\r\n    }\r\n\r\n    function deletNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    next.addEventListener('click', ()=> {\r\n        if (offset == deletNotDigits(width) * (slides.length -1)) {        //'500px' - все не числа заменяем на ''\r\n            offset = 0;\r\n        } else {\r\n           offset += deletNotDigits(width); \r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;                       // сдвигаем блок влево\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        setCurrent();\r\n        setActiveDot();\r\n    });\r\n\r\n    prev.addEventListener('click', ()=> {\r\n        if (offset == 0) {        \r\n            offset = deletNotDigits(width) * (slides.length -1);  //'500px' - переводим в число и убираем 2 посл символа\r\n        } else {\r\n           offset -= deletNotDigits(width);                       \r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;             // сдвигаем блок вправо \r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex =slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        setCurrent();\r\n        setActiveDot();\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');    // получаем в переменную номер точки по которой кликнули\r\n\r\n            slideIndex = slideTo;                                      // slideIndex переводим в позицию slideTo\r\n            offset = deletNotDigits(width) * (slideTo -1); // устанавливаем величину сдвига \r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;  // сдвигаем слайды на установленную величину\r\n\r\n            setCurrent();   \r\n            setActiveDot();\r\n        });\r\n    });\r\n\r\n    function setCurrent() {\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;          // присваиваем элементу текущего слайда значение slideIndex\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n    }\r\n\r\n    function setActiveDot() {                                // активную точку делаем непрозрачной\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n            dots[slideIndex - 1].style.opacity = 1;\r\n    }\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsParentSelector, tabsContentSelector, activeClass) {\r\n    //Tabs\r\n\r\n    const tabs = document.querySelectorAll(tabsSelector),\r\n    tabsParent = document.querySelector(tabsParentSelector),\r\n    tabsContent = document.querySelectorAll(tabsContentSelector);\r\n\r\n    // функция для скрытия всех табов \r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            item.classList.remove('show', 'fade');\r\n            item.classList.add('hide');\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove(activeClass);\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(activeClass);\r\n    }\r\n\r\n    //Задаем параметры по умолчаниюе: все табы скрыты, кроме 1го\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener('click', event => {\r\n        const target = event.target;\r\n\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default tabs;","function timer(id, deadline) {\r\n    //Timer\r\n\r\n    function getTimeRemaining(endTime){\r\n        const t = Date.parse(endTime) - Date.parse(new Date()),\r\n            days = Math.floor(t / (1000 * 60 * 60 * 24)),//округление до цел числа-млсек-ы итог делим на млсек в 1х сут\r\n            hours = Math.floor((t / (1000 * 60 * 60)) % 24), \r\n            minutes = Math.floor((t / 1000 / 60) % 60),\r\n            seconds = Math.floor((t /1000) % 60);\r\n\r\n        return {\r\n            total: t,\r\n            days,\r\n            hours,\r\n            minutes,\r\n            seconds,\r\n        //    'total': t,\r\n        //    'days' : days,\r\n        //    'hours' : hours, \r\n        //    'minutes' : minutes,\r\n        //    'seconds' : seconds,\r\n        };     \r\n    }\r\n\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n           return `0${num}`;\r\n        } else  {\r\n           return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endTime) {\r\n        const timer = document.querySelector(selector),\r\n              days = timer.querySelector('#days'),\r\n              hours = timer.querySelector('#hours'),\r\n              minutes = timer.querySelector('#minutes'),\r\n              seconds = timer.querySelector('#seconds'),\r\n              timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock();\r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endTime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n   \r\n            if (t.total <= 0) {\r\n               clearInterval(timeInterval);\r\n               days.innerHTML = getZero(0);\r\n               hours.innerHTML = getZero(0);\r\n               minutes.innerHTML = getZero(0);\r\n               seconds.innerHTML = getZero(0);\r\n            }\r\n        \r\n        }\r\n\r\n    }\r\n   \r\n    setClock(id, deadline);\r\n}\r\n\r\nexport default timer;","//  функция, кот отвечает только за отправку данных, ее можно использовать много раз с разными аргументами\r\nconst postData = async(url, data) => {            // async - указывает что внутри функции будет какой то асинхронный код\r\n    const res = await fetch(url, {                // await - указывает на то, что операция присваивания должна подождать рез-та запроса   \r\n        method: 'POST',\r\n        headers: {\r\n            'Content-type': 'application/json' // заголовки для формата json\r\n        },\r\n        body: data,\r\n    });\r\n\r\n    return await res.json();  // вернет промис модифицированный в объект      await - ждем окончания работы метода json\r\n};\r\n\r\n//  функция, кот отвечает только за получение данных с сервера: get запрос\r\nasync function getResource(url) {            // async - указывает что внутри функции будет какой то асинхронный код\r\n    let res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n        throw new Error(`Coluld not fetch ${url}, status: ${res.status}`);   // выкидываем новую ошибку (если сервер вернет 400 или 500)\r\n    }\r\n    return await res.json();                     // вернет промис модифицированный в объект      await - ждем окончания работы метода json\r\n};\r\n\r\n export {postData};   \r\n export {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from './modules/tabs';\r\nimport calc from './modules/calc';\r\nimport cards from './modules/cards';\r\nimport forms from './modules/forms';\r\nimport modal from './modules/modal';\r\nimport slider from './modules/slider';\r\nimport timer from './modules/timer';\r\nimport openModal from './modules/modal';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const modalTimerID = setTimeout(() => openModal('.modal', modalTimerID), 50000);\r\n\r\n    tabs('.tabheader__item', '.tabheader__items', '.tabcontent', 'tabheader__item_active');\r\n    calc();\r\n    cards();\r\n    forms('form', modalTimerID);\r\n    modal('[data-modal]', '.modal', modalTimerID);\r\n    slider({\r\n        container:'.offer__slider',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        slide: '.offer__slide',\r\n        totalCounter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner'\r\n    });\r\n    timer('.timer', '2023-01-01');\r\n});"],"names":[],"sourceRoot":""}